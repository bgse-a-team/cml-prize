vioplot(data[,1],data[,2],data[,3],data[,4],col="white")
vioplot(data[,1],data[,2],data[,3],data[,4],col="white",main="Distribution Egg Counts per Group")
?vioplot
vioplot(bimodal,uniform,normal)
vioplot(data[,1],data[,2],data[,3],data[,4],col="white")
title("Violin Plot")
title("Distribution Egg Counts per Group")
vioplot(data[,1],data[,2],data[,3],data[,4],col="white")
title("Distribution Egg Counts per Group")
vioplot(data[,1],data[,2],data[,3],data[,4],col="white",names=c("Control","T1","T2","T3"))
title("Distribution Egg Counts per Group")
library(readr)
forecast_competition_training <- read_csv("~/Desktop/forecast-competition/forecast-competition-training.csv")
View(forecast_competition_training)
names(forecast_competition_training)
rm(forecast_competition_training)
library(readr)
forecast_competition_training <- read_csv("~/Desktop/forecast-competition/forecast-competition-training.csv")
View(forecast_competition_training)
rm(forecast_competition_training)
library(readr)
forecast_competition_training <- read_csv("~/Desktop/forecast-competition/forecast-competition-training.csv")
View(forecast_competition_training)
names(forecast_competition_training)
library(readr)
data <- read_csv("~/Desktop/forecast-competition/forecast-competition-training.csv")
class(data)
data <- as.data.frame(read_csv("~/Desktop/forecast-competition/forecast-competition-training.csv"))
class(data)
names(data)
sapply(data,class)
?adf.test
?jarque.test
library(tseries)
?adf.test
adf.test(data[,"TARGET"])
jarque.test(data[,"TARGET"])
jarque.bera.test(data[,"TARGET"])
?jarque.bera.test
acf(data[,"TARGET"])
myplot <- function( dates , y , col='darkblue' , t='l' , lwd=2 , ylim=NULL , main=NULL ){
if( is.null(main) ){ par( mar=c(2,2,0.1,0.1) ) }
plot( dates , y , t=t , col=col , lwd=lwd , axes=F , xlab='' , ylab='' , xaxs="i" , ylim=ylim , main=main )
xticks <- axis.Date(1, x=dates, at=seq(dates[1], dates[length(dates)], "year") , lwd=0, lwd.tick=1, tck=0.02)
yticks <- axis(2 , lwd=0, lwd.tick=1, tck=0.02)
axis.Date(3, x=dates, at=seq(dates[1], dates[length(dates)], "year"), lwd=0, lwd.tick=1, tck=0.02, lab=F)
axis(4, lwd=0, lwd.tick=1, tck=0.02, lab=F)
abline( h=yticks , lty=3 )
abline( v=xticks , lty=3 )
box()
}
myplot(data[,"TIME"],data[,"TARGET"], col="red")
myplot(as.Date(data[,"TIME"]),data[,"TARGET"], col="red")
class(data[,"TIME"])
length(data[,"TIME"])
rm(myplot)
plot(data[,"TIME"],data[,"TARGET"], col="red")
plot(data[,"TIME"],data[,"TARGET"], col="red",type="l")
abline(h=0, lwd=2)
acf(data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
?acf
acf_TARGET$acf
acf_TARGET <- acf(data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Exponential decrease
acf_TARGET$acf
2:nrow(data)
lm1 <- lm(data[2:nrow(data),"TARGET"] ~ data[1:(nrow(data)-1),"TARGET"])
?coeftest
library(lmtest)
?coeftest
?NeweyWest
library(sandwich)
?NeweyWest
NeweyWest(lm1)
coeftest(lm1,NeweyWest(lm1))
summary(lm1)$r.squared
summary(lm1)$residuals
acf(summary(lm1)$residuals)
acf(summary(lm1)$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
jarque.bera.test(summary(lm1)$residuals)
?v
?Box.test
Box.test(summary(lm1)$residuals)
Box.test(summary(lm1)$residuals, type="Ljung-Box")
acf(summary(lm1)$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
Box.test(summary(lm1)$residuals, lag=2,type="Ljung-Box") # Reject the null hypothesis of independence of the residuals
Box.test(summary(lm1)$residuals, lag=1:2,type="Ljung-Box") # Reject the null hypothesis of independence of the residuals
Box.test(summary(lm1)$residuals,type="Ljung-Box") # Reject the null hypothesis of independence of the residuals
Box.test(summary(lm1)$residuals, lag=22, type="Ljung-Box") # Reject the null hypothesis of independence of the residuals
ar1 <- arima(data[,"TARGET"], order=c(1,0,0))
ar1
lm1
ar1
ar1$loglik
ar1$aic
names(lm1)
ar1$loglik
ar1$aic
(-2*ar1$loglik+2*4)/length(data[,"TARGET"])
(-2*ar1$loglik+log(length(data_in))*4)/length(data[,"TARGET"])
(-2*ar1$loglik+log(length(data[,"TARGET"]))*4)/length(data[,"TARGET"])
ar1$loglik
ar1$aic
ar1 <- arima(data[,"TARGET"], order=c(1,0,0))
ar1
ar1$aic
pacf(data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Exponential decrease
names(ar1)
head(ar1$series)
head(ar1$arma)
head(ar1$residuals)
ar1$residuals + data[,"TARGET"]
acf(ar1$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
pacf(ar1$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values
acf(ar1$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values
ma1 <- arima(data[,"TARGET"], order=c(0,0,1))
ma1
ma1$aic
ar1$aic
acf(ma1$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
acf(ma1$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
pacf(ma1$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (close to exponential decrease like the target variable)
arma11 <- arima(data[,"TARGET"], order=c(1,0,1))
arma11
ma1$aic
acf(arma11$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
pacf(arma11$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (close to exponential decrease like the target variable)
pacf(ar1$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (close to exponential decrease like the target variable)
Box.test(summary(ar1)$residuals, lag=22, type="Ljung-Box") # Reject the null hypothesis of independence of the residuals
Box.test(ar1$residuals, lag=22, type="Ljung-Box") # Reject the null hypothesis of independence of the residuals
Box.test(ma1$residuals, lag=22, type="Ljung-Box") # Reject the null hypothesis of independence of the residuals
Box.test(arma11$residuals, lag=22, type="Ljung-Box") # Reject the null hypothesis of independence of the residuals
acf(ar1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
acf(ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
acf(arma11$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
jarque.bera.test(ar1$residuals) # Evidence of normality of the residuals
jarque.bera.test(ma1$residuals) # Evidence of normality of the residuals
jarque.bera.test(arma11$residuals) # Evidence of normality of the residuals
adf.test(data[,"TARGET"]) # Evidence of stationarity
acf(data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Exponential decrease
pacf(data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Exponential decrease
ma1 <- arima(data[,"TARGET"], order=c(0,0,1))
acf(ma1$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
plot(data[,"TIME"],data[,"TARGET"], col="red",type="l")
lines(data[,"TIME"],ma1$residuals + data[,"TARGET"], col="blue",type="l")
acf(ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
acf(ma1$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
ma1$aic
ma1$aic
ar1$aic
ma1 <- arima(data[,"TARGET"], order=c(0,0,1))
acf(ma1$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
acf(data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Exponential decrease
ma1 <- arima(data[,"TARGET"], order=c(0,0,1))
acf(ma1$residuals - data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
acf(ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
acf(ma1$residuals + data[,"TARGET"], ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
acf(ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
acf(ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
predict.Arima(ma1)
predict(ma1)
predict(ma1)$pred
ma1$residuals[1] + data[1,"TARGET"]
pacf(data[,"TARGET"] - ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (close to exponential decrease like the target variable)
acf(data[,"TARGET"] - ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
acf(ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
acf(data[,"TARGET"] - ar1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
acf(ar1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
ar1 <- arima(data[,"TARGET"], order=c(1,0,0))
ar1
ar1$aic
Box.test(ar1$residuals, lag=22, type="Ljung-Box") # Reject the null hypothesis of independence of the residuals
acf(ar1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
jarque.bera.test(ar1$residuals) # Evidence of normality of the residuals
acf(data[,"TARGET"] - ar1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
pacf(data[,"TARGET"] - ar1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (close to exponential decrease like the target variable)
ma1 <- arima(data[,"TARGET"], order=c(0,0,1))
ma1
ma1$aic
Box.test(ma1$residuals, lag=22, type="Ljung-Box") # Reject the null hypothesis of independence of the residuals
acf(ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
jarque.bera.test(ma1$residuals) # Evidence of normality of the residuals
acf(data[,"TARGET"] - ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
pacf(data[,"TARGET"] - ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (close to exponential decrease like the target variable)
arma11 <- arima(data[,"TARGET"], order=c(1,0,1))
arma11
ma1$aic
Box.test(arma11$residuals, lag=22, type="Ljung-Box") # Fail to reject the null hypothesis of independence of the residuals
acf(arma11$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
jarque.bera.test(arma11$residuals) # Evidence of normality of the residuals
acf(data[,"TARGET"] - arma11$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
pacf(data[,"TARGET"] - arma11$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (close to exponential decrease like the target variable)
acf(ar1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
acf(ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
acf(arma11$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
acf(data[,"TARGET"] - arma11$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
acf(data[,"TARGET"] - ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
acf(data[,"TARGET"] - ar1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2') # Autorrelation fitted values (exponential decrease like the target variable)
ar1$aic
ma1$aic
Box.test(arma11$residuals, lag=22, type="Ljung-Box") # Fail to reject the null hypothesis of independence of the residuals
Box.test(ar1$residuals, lag=22, type="Ljung-Box") # Reject the null hypothesis of independence of the residuals
arma11$aic
pacf(ar1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
pacf(ma1$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
pacf(arma11$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
arma11$aic
arma21 <- arima(data[,"TARGET"], order=c(2,0,1))
arma21$aic
Box.test(arma21$residuals, lag=22, type="Ljung-Box") # Fail to reject the null hypothesis of independence of the residuals
acf(arma21$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
pacf(arma21$residuals, ylim=c(-0.1,1), lwd=5, xlim=c(0,25), col='darkorange2')
jarque.bera.test(arma21$residuals) # Evidence of normality of the residuals
arma22 <- arima(data[,"TARGET"], order=c(2,0,1))
arma22$aic
arma22 <- arima(data[,"TARGET"], order=c(2,0,2))
arma22$aic
80*0.6-20*0.4
100*0.3
120*06
120*0,6
120*0.6
152*0.6
152*0.6+32*0.4
82*0.3+52*0.7
132*0.6+12*0.4
library(readr)
eklima3 <- read_delim("~/Downloads/eklima3.txt",
" ", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(eklima3)
data <- read_delim("~/Downloads/eklima3.txt", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
library(readr)
data <- read_delim("~/Downloads/eklima3.txt", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
rm(eklima3)
View(data)
dates <- data[,7]
head(dates)
data <- as.data.frame(read_delim("~/Downloads/eklima3.txt", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE))
View(data)
dates <- data[,7]
head(dates)
temp <- rep(NA,nrow(data))
temp[which(data[,10] != NA)] <- data[which(data[,10] != NA),]
temp[1:20]
class(which(data[,10] != NA))
class(data)
which(data[,10] != NA)
data[,10] != NA
!is.na(data[,10])
temp[which(!is.na(data[,10]))] <- data[which(!is.na(data[,10])),]
temp[which(!is.na(data[,10]))] <- data[which(!is.na(data[,10])),10]
temp[1:20]
which(!is.na(data[,10]))
which(!is.na(data[,10]))
temp[which(!is.na(data[,10]))] <- as.vector(data[which(!is.na(data[,10])),10])
temp[1:20]
which(!is.na(data[,10]))
temp <- rep(NA,nrow(data))
class(temp)
head(temp)
temp[which(!is.na(data[,10]))] <- data[which(!is.na(data[,10])),10]
head(temp)
class(temp)
temp[1:20]
temp[which(!is.na(data[,11]))] <- data[which(!is.na(data[,11])),11]
temp[which(!is.na(data[,12]))] <- data[which(!is.na(data[,12])),12]
temp
which(is.na(temp))
head(dates)
dates <- as.Date(data[,7],"%m.%Y"
temp <- rep(NA,nrow(data))
temp[which(!is.na(data[,10]))] <- data[which(!is.na(data[,10])),10]
temp[which(!is.na(data[,11]))] <- data[which(!is.na(data[,11])),11]
temp[which(!is.na(data[,12]))] <- data[which(!is.na(data[,12])),12]
data <- as.data.frame(read_delim("~/Downloads/eklima3.txt", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE))
View(data)
dates <- as.Date(data[,7],"%m.%Y")
head(dates)
data <- as.data.frame(read_delim("~/Downloads/eklima3.txt", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE))
dates <- as.Date(data[,7],"%m.%Y")
dates <- data[,7]
class(dates)
dates <- as.Date(dates,"%m.%Y")
as.Date("09.2012","%m.%Y")
as.Date("09/2012","%m/%Y")
as.Date("09/2012","%mm/%Y")
class(data`,7`)
class(data[,7])
as.Date(data[,7])
as.numeric(data[,7])
?as.Date
lct <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
Sys.setlocale("LC_TIME", lct)
dates <- data[,7]
dates <- as.Date(dates,"%m.%Y")
data[,7]
as.Date("02/2012","%m/%Y")
dates <- data[,7]
dates <- strptime(dates,"%m.%Y")
dates <- data[,7]
dates <- strptime(dates,"%m.%Y") %>% is.na()
is.na(data[,7])
table(is.na(data[,7]))
dates <- data[,7]
dates <- as.Date(dates,"%m.%Y")
dates <- as.charachter(data[,7])
dates <- as.character(data[,7])
dates <- as.Date(dates,"%m.%Y")
library(zoo)
as.Date(as.yearmon(format(x), "%Y.%m"))
as.Date(as.yearmon(format(data[,7]), "%Y.%m"))
as.Date(as.yearmon(format(data[,7]), "%m.%Y"))
dates <- as.Date(as.yearmon(format(data[,7]), "%m.%Y"))
format(dates, format="%m-%Y")
dates <- format(dates, format="%m-%Y")
library(foreign)
data <- read.spss("~/Downloads/r15020_Victimització_Basededades-Persones.sav")
data <- read.spss("~/Downloads/r15020_Victimització_Basededades-Persones.sav", to.data.frame=TRUE)
View(data)
names(data)
library(memisc)
install.packages("memisc")
library(memisc)
data <- as.data.frame(as.data.set(spss.system.file("~/Downloads/r15020_Victimització_Basededades-Persones.sav")))
library(haven)
data <- read_sav("~/Downloads/r15020_Victimització_Basededades-Persones.sav")
View(data)
library(foreign)
write.dta(data, "~/Downloads/r15020_Victimització_Basededades-Persones.dta")
library(haven)
data <- read_sav("~/Downloads/2011vict.sav")
library(foreign)
write.dta(data, "~/Downloads/2011vict.sav.dta")
View(data)
?read_sav
data <- read_sav("~/Downloads/2011vict.sav", user_na=TRUE)
View(data)
head(data[,11])
data <- data.frame(read_sav("~/Downloads/2011vict.sav"))
head(data[,11])
?ifelse
apply(data,2,ifelse(data,"",NA))
apply(data,2,ifelse(data == "",NA))
?apply
ifelse(data[,11] == "",NA)
apply(data, 2, function(x) gsub("", NA, x))
data <- apply(data, 2, function(x) gsub("", NA, x))
View(data)
data <- data.frame(read_sav("~/Downloads/2011vict.sav"))
?gsuv
?gsub
data <- apply(data, 2, function(x) gsub("", NA, x))
data <- data.frame(read_sav("~/Downloads/2011vict.sav"))
data <- apply(data, 2, function(x) gsub("^$|^ $", NA, x))
View(data)
data <- data.frame(read_sav("~/Downloads/2011vict.sav"))
data2 <- apply(data, 2, function(x) gsub("^$|^ $", NA, x))
class(data)
class(data2)
View(data2)
data2 <- apply(data, 2, function(x) gsub("", NA, x))
data2 <- apply(data, 2, function(x) gsub("", NA, x))
View(data2)
head(data)
data2 <- data[data==''|data==' ']<-NA
data <- data.frame(read_sav("~/Downloads/2011vict.sav"))
for (i in 1:ncol(data)){
data[data[i,ncol(data)] == "" | data == " ",i] <- NA
}
for (i in 1:ncol(data)){
data[data[,i] == "" | data == " ",i] <- NA
}
for (i in 1:ncol(data)){
for (j in 1:nrow(data)){
data[data[j,i] == "" | data == " ",i] <- NA
}
}
for (i in 1:ncol(data)){
for (j in 1:nrow(data)){
if (data[i,j] == "" | data[i,j] == " "){
data[i,j] <- NA
}
}
}
1:ncol(data)
1:ncol(data)
1:nrow(data)
for (i in 1:ncol(data)){
for (j in 1:nrow(data)){
if (data[j,i] == "" | data[j,i] == " "){
data[j,i] <- NA
}
}
}
data[1,11]
View(data)
data[2,11]
data[2,11] == ""
for (i in 1:ncol(data)){
for (j in 1:nrow(data)){
if (data[j,i] == ""){
data[j,i] <- NA
}
}
}
data2 <- data.frame(rep(NA,ncol(data)*nrow(data)),ncol=ncol(data))
data2 <- data.frame(rep(NA,ncol(data)*nrow(data)),ncol=ncol(data))
for (i in 1:ncol(data)){
for (j in 1:nrow(data)){
if (data[j,i] != ""){
data2[j,i] <- data[j,i]
}
}
}
?data.frame
data2 <- data.frame(matrix(rep(NA,ncol(data)*nrow(data)),ncol=ncol(data)))
for (i in 1:ncol(data)){
for (j in 1:nrow(data)){
if (data[j,i] != ""){
data2[j,i] <- data[j,i]
}
}
}
data <- data.frame(read_sav("~/Downloads/2011vict.sav"))
sapply(data)
sapply(data,class)
data <- read_sav("~/Downloads/2011vict.sav")
objects(data)
str(data)
data <- data.frame(read_sav("~/Downloads/2011vict.sav"))
apply(data, 2, function(x) gsub("^$|^ $", NA, x))
data2 <- apply(data, 2, function(x) gsub("^$|^ $", NA, x))
library(haven)
data <- data.frame(read_sav("~/Downloads/2011vict.sav"))
library(foreign)
data2 <- apply(data, 2, function(x) gsub("^$|^ $", NA, x))
View(data)
View(data2)
class(data2)
write.dta(data2, "~/Downloads/2011vict.sav.dta")
data2 <- as.data.frame(apply(data, 2, function(x) gsub("^$|^ $", NA, x)))
write.dta(data2, "~/Downloads/2011vict.sav.dta")
sapply(data,class)
View(data)
data <- data.frame(read_sav("~/Downloads/2011vict.sav"))
data <- as.data.frame(apply(data, 2, function(x) gsub("^$|^ $", NA, x)))
View(data)
sapply(data,class)
setwd("~/Desktop/cml-prize/data")
library(readr)
library(class)
library(AUC)
library(e1071)
library(MASS)
library(glmnet)
X_train <- as.data.frame(read_csv("X_train.dat"))
X_train <- X_train[,-1]
X_train <- X_train[,-which(apply(X_train,2,function(x) all(x==0)))]
colnames(X_train) <- paste0(rep("X",ncol(X_train)),1:ncol(X_train))
X_train <- apply(X_train, 2, scale)
X_test <- as.data.frame(read_csv("X_test.dat"))[,1]
X_test <- X_test[,-1]
X_test <- X_test[,-which(apply(X_test,2,function(x) all(x==0)))]
colnames(X_test) <- paste0(rep("X",ncol(X_test)),1:ncol(X_test))
X_test <- apply(X_test, 2, scale)
y_train <- as.data.frame(read_csv("y_train.dat", col_names = FALSE))
y_train <- as.factor(y_train[,2])
principal_components_train <- prcomp(X_train)$x[,1:58]
principal_components_train <- prcomp(X_train)$x[,1:58]
complete_data <- as.data.frame(principal_components_train[drop=F])
logistic_model <- glm(y_train ~ ., data=complete_data, family=binomial)
principal_components_test <- prcomp(X_test)$x[,1:58]
dim(X_test)
clas(X_test)
class(X_test)
X_train <- as.data.frame(read_csv("X_train.dat"))
X_train <- X_train[,-1]
X_train <- X_train[,-which(apply(X_train,2,function(x) all(x==0)))]
colnames(X_train) <- paste0(rep("X",ncol(X_train)),1:ncol(X_train))
X_train <- apply(X_train, 2, scale)
X_test <- as.data.frame(read_csv("X_test.dat"))[,1]
X_test <- X_test[,-1]
library(readr)
library(class)
library(AUC)
library(e1071)
library(MASS)
library(glmnet)
X_train <- as.data.frame(read_csv("X_train.dat"))
X_train <- X_train[,-1]
X_train <- X_train[,-which(apply(X_train,2,function(x) all(x==0)))]
colnames(X_train) <- paste0(rep("X",ncol(X_train)),1:ncol(X_train))
X_train <- apply(X_train, 2, scale)
X_test <- as.data.frame(read_csv("X_test.dat"))
X_test <- X_test[,-1]
X_test <- X_test[,-which(apply(X_test,2,function(x) all(x==0)))]
colnames(X_test) <- paste0(rep("X",ncol(X_test)),1:ncol(X_test))
X_test <- apply(X_test, 2, scale)
y_train <- as.data.frame(read_csv("y_train.dat", col_names = FALSE))
y_train <- as.factor(y_train[,2])
principal_components_train <- prcomp(X_train)$x[,1:58]
complete_data <- as.data.frame(principal_components_train[drop=F])
logistic_model <- glm(y_train ~ ., data=complete_data, family=binomial)
principal_components_test <- prcomp(X_test)$x[,1:58]
predictions <- predict(logistic_model, newdata=as.data.frame(principal_components_test[drop=F]), type="response")
predictions[predictions < 0.5] <- 0
predictions[predictions >= 0.5] <- 1
pred <- cbind(as.matrix(read_csv("X_test.dat"))[,1], predictions)
colnames(pred) <- c("Id","Prediction")
View(predictions)
head(pred)
write.csv(pred, file="second_submission.csv", row.names=F)
